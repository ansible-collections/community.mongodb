name: CI
on:
- pull_request

jobs:
  sanity:
    runs-on: ubuntu-latest
    steps:

      - name: Check out code
        uses: actions/checkout@v1
        with:
          path: ansible_collections/community/mongodb

      - name: Set up Python 3.6
        uses: actions/setup-python@v1
        with:
          python-version: 3.6

      - name: Install ansible-base
        run: pip install git+https://github.com/ansible-collection-migration/ansible-base.git --disable-pip-version-check

      - name: Run sanity tests
        run: ansible-test sanity --docker -v --color --python 3.6

  integration:
    env:
      mongodb_version_file: "../../ansible_collections/community/mongodb/tests/integration/targets/setup_mongodb/defaults/main.yml"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python_version: ["3.6"]
    steps:


      - name: Check out code
        uses: actions/checkout@v1
        with:
          path: ansible_collections/community/mongodb

      - name: Set up Python ${{ matrix.python_version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python_version }}

      - name: Install community.general
        run: ansible-galaxy collection install community.general -p ../../

      - name: Install ansible-base
        run: pip install git+https://github.com/ansible-collection-migration/ansible-base.git --disable-pip-version-check

      - name: Ensure MongoDB is set to 4.0
        run: "sed -i 's/^mongodb_version:.*/mongodb_version: \"4\.0\"/g' ${{ mongodb_version_file }}"

      - name: Run integration tests on Python ${{ matrix.python_version }} and MongoDB 4.0
        run: ansible-test integration --docker -v --color --retry-on-error --python ${{ matrix.python_version }} --continue-on-error --diff --coverage

      - name: Ensure MongoDB is set to 4.2
        run: "sed -i 's/^mongodb_version:.*/mongodb_version: \"4\.2\"/g' ${{ mongodb_version_file }}"

      - name: Run integration tests on Python ${{ matrix.python_version }} and MongoDB 4.2
        run: ansible-test integration --docker -v --color --retry-on-error --python ${{ matrix.python_version }} --continue-on-error --diff --coverage

      - name: Ensure MongoDB version is returned to original - TODO Read original??
        run: "sed -i 's/^mongodb_version:.*/mongodb_version: \"4\.0\"/g' ${{ mongodb_version_file }}"

      - name: Upload Coverage data
        run: tests/coverage.sh


# FIXME FUTURE: If Look if we want to split integration tests into it's own job if they are long running
# FIXME FUTURE: Other Python Versions
# FIXME FUTURE: Other Operating Systems
