name: CI
on:
- pull_request

env:
  mongodb_version_file: "./tests/integration/targets/setup_mongodb/defaults/main.yml"

jobs:
  sanity:
    runs-on: ubuntu-latest
    steps:

      - name: Check out code
        uses: actions/checkout@v1
        with:
          path: ansible_collections/community/mongodb

      - name: Set up Python 3.6
        uses: actions/setup-python@v1
        with:
          python-version: 3.6

      - name: Install ansible-base (devel)
        run: pip install https://github.com/ansible/ansible/archive/devel.tar.gz --disable-pip-version-check

      - name: Run sanity tests
        run: ansible-test sanity --docker -v --color --python 3.6

  units:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v1
        with:
          path: ansible_collections/community/mongodb

      - name: Set up Python 3.6
        uses: actions/setup-python@v1
        with:
          python-version: 3.6

      - name: Install ansible-base (devel)
        run: pip install https://github.com/ansible/ansible/archive/devel.tar.gz --disable-pip-version-check

      - name: Run unit tests
        run: ansible-test units --docker -v --color --python 3.6 --coverage

      - name: Generate coverage report.
        run: ansible-test coverage xml -v --requirements --group-by command --group-by version

      - uses: codecov/codecov-action@v1
        with:
          fail_ci_if_error: false

  integration:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python_version:
          - "3.6"
        mongodb_version:
          - "4.0"
          - "4.2"
        mongodb_module:
          - mongodb_balancer
          - mongodb_index
          - mongodb_info
          - mongodb_maintenance
          - mongodb_oplog
          - mongodb_parameter
          - mongodb_replicaset
          - mongodb_shard
          - mongodb_shutdown
          - mongodb_status
          - mongodb_stepdown
          - mongodb_user
          - lookup_mongodb
        docker_image:
          - ubuntu1804
          - centos8
        ansible_version:
          - stable-2.10
          - devel
    steps:

      - name: Check out code
        uses: actions/checkout@v1
        with:
          path: ansible_collections/community/mongodb

      - name: Set up Python ${{ matrix.python_version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python_version }}

      - name: Install community.general
        run: ansible-galaxy collection install community.general -p ../../

      - name: Install community.crypto
        run: ansible-galaxy collection install community.crypto -p ../../

      - name: Install ansible-base (${{ matrix.ansible_version }})
        run: pip install https://github.com/ansible/ansible/archive/${{ matrix.ansible_version }}.tar.gz --disable-pip-version-check

      - name: Ensure MongoDB version is set to ${{ matrix.mongodb_version }}
        run: "sed -i 's/^mongodb_version:.*/mongodb_version: \"${{ matrix.mongodb_version }}\"/g' ${{ env.mongodb_version_file }}"

      - name: Run integration tests on Python ${{ matrix.python_version }} | ${{ matrix.docker_image }} | ${{ matrix.ansible_version }} | ${{ matrix.mongodb_version }}
        run: ansible-test integration --docker ${{ matrix.docker_image }} -v --color --retry-on-error --python ${{ matrix.python_version }} --continue-on-error --diff --coverage ${{ matrix.mongodb_module }}

      - name: Upload Coverage data
        run: tests/coverage.sh

# FIXME FUTURE: Other Python Versions
# FIXME FUTURE: Other Operating Systems
