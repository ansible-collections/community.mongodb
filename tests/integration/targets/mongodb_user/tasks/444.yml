---
# Copyright 2022, Rhys Campbell <rhyscampbell@bluewin.ch>
# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)
- name: Ensure cert dir exists
  file:
    path: /tmp/certs44
    state: directory
    owner: "{{ mongodb_user }}"
    group: "{{ mongodb_user }}"

- name: Generate certs
  shell: |
    cd /tmp/certs44
    openssl req -newkey rsa:2048 -new -x509 -days 365 -nodes -out mongodb-cert.crt -keyout mongodb-cert.key -subj "/C=US/ST=Denial/L=Springfield/O=Dis/CN=www.example.com"
    cat mongodb-cert.key mongodb-cert.crt > mongodb.pem

- name: Set additional options for the mongod
  set_fact:
    mongod_storage_engine_opts: "{{ old_mongod_storage_engine_opts }}  \
      --tlsMode requireTLS \
      --tlsCertificateKeyFile /tmp/certs44/mongodb.pem"

- include_tasks: mongod_singlenode.yml

- name: Create admin user with module
  community.mongodb.mongodb_user:
    login_port: 3001
    database: admin
    name: '{{ mongodb_admin_user }}'
    password: '{{ mongodb_admin_password }}'
    roles: root
    state: present
    ssl: true
    ssl_ca_certs: /tmp/certs44/mongodb.pem
    connection_options:
      - "tlsAllowInvalidHostnames=true"

- name: Get admin
  shell: mongo admin --host localhost --port 3001 --ssl --sslCAFile /tmp/certs44/mongodb.pem --sslAllowInvalidHostnames  --username "{{ mongodb_admin_user }}" --password "{{ mongodb_admin_password }}" --eval "printjson(db.getUser('{{ mongodb_admin_user }}'))"
  register: admin_myuser
  when: mongodb_version.startswith('4')

- name: Get admin
  shell: mongosh admin --host localhost --port 3001 --tls --tlsCAFile /tmp/certs44/mongodb.pem --tlsAllowInvalidHostnames  --username "{{ mongodb_admin_user }}" --password "{{ mongodb_admin_password }}" --eval "printjson(db.getUser('{{ mongodb_admin_user }}'))"
  register: admin_myuser
  when: not mongodb_version.startswith('4')

- name: Assert that user setup is as expected
  assert:
    that:
    - '''admin'' in admin_myuser.stdout'
    - '''root'' in admin_myuser.stdout'
