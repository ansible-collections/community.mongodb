---
# Copyright 2022, Rhys Campbell <rhyscampbell@bluewin.ch>
# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)
- set_fact:
    mongod_auth: true

- name: Generate certs
  shell: |
    # Fix error: Can not load /root/.rnd into RNG\n140040
    cd /root
    openssl rand -writerand .rnd

    mkdir -p /tmp/certs
    cd /tmp/certs

    echo -n '00' > ca.srl   # RC added
    prefix="/C=US/ST=YourState/L=YourCity/O=YourCompany"
    #-----------------------------------------------------------
    # Generate self signed root CA cert
    #-----------------------------------------------------------
    openssl req -days 3650 -nodes -x509 -newkey rsa:2048 -keyout ca.key -out ca.crt -subj "${prefix}/CN=ROOTCA"
    username="super"

    # Generate server certs
    openssl req -days 3650 -nodes -newkey rsa:2048 -keyout server.key -out server.csr -subj "${prefix}/CN=127.0.0.1"
    openssl x509 -days 3650 -req -in server.csr -CA ca.crt -CAkey ca.key -CAcreateserial -out server.crt
    cat server.key server.crt > server.pem
    ############ EOF 

    #-----------------------------------------------------------
    # Generate client cert to be signed
    #-----------------------------------------------------------
    openssl req -days 3650 -nodes -newkey rsa:2048 -keyout ${username}.key -out ${username}.csr -subj "${prefix}/OU=${username}/CN=127.0.0.1"

    #-----------------------------------------------------------
    # Sign the client cert
    #-----------------------------------------------------------
    openssl x509 -req -days 3650 -in ${username}.csr -CA ca.crt -CAkey ca.key -CAserial ca.srl -out ${username}.crt

    #-----------------------------------------------------------
    # Create client PEM file
    #-----------------------------------------------------------
    cat ${username}.key ${username}.crt > ${username}.pem

- shell: cat /tmp/certs/server.pem

- name: Change owner on certs dir
  shell: |
    chown {{ mongodb_user }}:{{ mongodb_user }} -R /tmp/certs;
    chmod 0400 -R /tmp/certs;

- name: Set additional options for the mongod
  set_fact:
    mongod_storage_engine_opts: "{{ mongod_storage_engine_opts }}  \
      --clusterAuthMode x509 \
      --tlsMode requireTLS \
      --tlsCAFile /tmp/certs/ca.crt
      --tlsCertificateKeyFile /tmp/certs/server.pem \
      --fork"

- include_tasks: mongod_singlenode.yml

- name: Adding superuser
  mongodb_user:
    login_host: 127.0.0.1
    login_port: 3001  #â€œ{{ mongodb_nodes[0] }}"
    login_database: "$external"
    database: "$external"
    create_for_localhost_exception: /tmp/super.success
    update_password: on_create
    name: "CN=127.0.0.1,OU=super,O=<name>,L=<name>,ST=<name>,C=US"
    roles:
      - db: admin
        role: userAdminAnyDatabase
    ssl: true 
    ssl_ca_certs: /tmp/certs/ca.crt
    ssl_certfile: /tmp/certs/super.pem
    auth_mechanism: 'MONGODB-X509'
    state: present
    connection_options:
      - "tlsAllowInvalidHostnames=true"