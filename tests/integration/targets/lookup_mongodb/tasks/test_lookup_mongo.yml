- name: pymongo may be installed by other tests
  pip:
    name: pymongo
    state: absent

- name: "assert we complain properly if pymongo is not there"
  debug: msg="{{ lookup('community.mongodb.mongodb', mongodb_parameters ) }}"
  register: result
  ignore_errors: yes

- name: "assert we complain properly if pymongo is not there (assert part)"
  assert:
    that:
    - result is failed
    - result is not changed
    - "'pymongo is required' in result.msg"

- name: install pymongo
  pip:
    name: "pymongo"

- name: "assert we complain properly if we can't connect to mongo"
  debug: msg="{{ lookup('community.mongodb.mongodb', mongodb_parameters ) }}"
  register: result
  ignore_errors: yes

- name: Assert we fail with the right message if we can't connect to mongodb
  assert:
    that:
    - result is failed
    - result is not changed
    - "'unable to connect to database' in result.msg"

- name: Ensure tests home exists
  file:
    path: '{{ remote_tmp_dir }}/tests'
    state: directory

- include_tasks: mongod_teardown.yml
- include_tasks: mongod_singlenode.yml

- name: Wait up to 300 seconds for port 27017 (mongodb) to become open on the host, don't start checking for 10 seconds
  wait_for:
    port: 27017

- name: "make a simple query"
  debug: msg="{{ lookup('community.mongodb.mongodb', mongodb_parameters ).pid }}"
  register: result

- name: asserting query result is a valid value
  assert:
    that:
    - "(result.msg |int) > 0"

- include_tasks: mongod_teardown.yml
