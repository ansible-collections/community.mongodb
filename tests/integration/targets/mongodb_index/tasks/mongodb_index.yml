# Copyright 2020, Rhys Campbell <rhys.james.campbell@googlemail.com>
# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)
- name: Create an index on a collection (check mode)
  mongodb_index:
    login_port: 27017
    login_user: '{{ mongodb_admin_user }}'
    login_password: '{{ mongodb_admin_password }}'
    login_database: "admin"
    indexes:
      - database: "test"
        collection: "rhys"
        keys:
            username: 1
            last_login: -1
        options:
          name: myindex
        state: present
  check_mode: yes
  register: result

- assert:
    that:
    - result is changed
    - result.indexes_created == ["test.rhys.myindex"]

- name: Create an index on a collection
  mongodb_index:
    login_port: 27017
    login_user: '{{ mongodb_admin_user }}'
    login_password: '{{ mongodb_admin_password }}'
    login_database: "admin"
    indexes:
      - database: "test"
        collection: "rhys"
        keys:
            username: 1
            last_login: -1
        options:
          name: myindex
        state: present
  register: result

- assert:
    that:
    - result is changed
    - result.indexes_created == ["test.rhys.myindex"]

- name: Get indexes on collection
  command: mongo  test --authenticationDatabase admin --port 27017 -u {{ mongodb_admin_user }} -p {{ mongodb_admin_password }} --eval "db.rhys.getIndexes();"
  register: output

- debug:
    var: output

- assert:
    that:
      - '"myindex" in output.stdout'

- name: Drop the index we just created (check mode)
  mongodb_index:
    login_port: 27017
    login_user: '{{ mongodb_admin_user }}'
    login_password: '{{ mongodb_admin_password }}'
    login_database: "admin"
    indexes:
      - database: "test"
        collection: "rhys"
        options:
          name: myindex
        state: absent
  check_mode: true
  register: result

- assert:
    that:
      - result is changed
      - result.indexes_dropped == ["test.rhys.myindex"]

- name: Drop the index we just created
  mongodb_index:
    login_port: 27017
    login_user: '{{ mongodb_admin_user }}'
    login_password: '{{ mongodb_admin_password }}'
    login_database: "admin"
    indexes:
      - database: "test"
        collection: "rhys"
        options:
          name: myindex
        state: absent
  register: result

- assert:
    that:
      - result is changed
      - result.indexes_dropped == ["test.rhys.myindex"]

- name: Get indexes on collection
  command: mongo  test --authenticationDatabase admin --port 27017 -u {{ mongodb_admin_user }} -p {{ mongodb_admin_password }} --eval "db.rhys.getIndexes();"
  register: output

- debug:
    var: output

- assert:
    that:
      - '"myindex" not in output.stdout'

# Check adding 2 indexes
# Check adding 3 indexes
- name: Add a unique index
  mongodb_index:
    login_port: 27017
    login_user: '{{ mongodb_admin_user }}'
    login_password: '{{ mongodb_admin_password }}'
    login_database: "admin"
    indexes:
      - database: "test"
        collection: "rhys"
        keys:
          username: 1
        options:
          name: myuniqueindex
          unique: true
        state: present

- assert:
    that:
      - result is changed
      - result.indexes_created == ["test.rhys.myuniqueindex"]

- name: Get indexes on collection
  command: mongo  test --authenticationDatabase admin --port 27017 -u {{ mongodb_admin_user }} -p {{ mongodb_admin_password }} --eval "db.rhys.getIndexes();"
  register: output

- debug:
    var: output

- assert:
    that:
      - '"test.rhys.myuniqueindex" in output.stdout'

# Check adding a sparse index
# Check adding a TTL index
# Check adding an index in the background
# Check adding a partial index

# Check misssing database key
# Check database is not string
# Check collection is not string
# Check when key spec for index is not a dict
# Check when options is not a dict
# Check when "name" key is not in options dict
# Check when state is something other that "absent" or "present"

# Check creating 5 index all with multiple options specified
# Check creating and dropping a bunch of indexes
