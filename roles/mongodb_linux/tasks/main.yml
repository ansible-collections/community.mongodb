---
# tasks file for mongodb_linux
- name: Are we in docker?
  stat:
    path: is_docker.txt
  register: d

- name: Load vars for os family
  include_vars:
    file: "{{ ansible_os_family }}.yml"

- name: Set vars for RedHat 8
  set_fact:
    ntp_package: chrony
    ntp_service: chronyd
  when:
    - ansible_os_family == "RedHat"
    - ansible_distribution_major_version|int >= 8

- name: Set swappiness
  sysctl:
    name: vm.swappiness
    value: "{{ swappiness }}"
    state: present

- name: Ensure ntp service is installed
  package:
    name: "{{ ntp_package }}"
    state: present

- name: Update perms on pid dir on RedHat 8
  file:
    path: /run/chrony/
    owner: root
    group: root
    state: directory
  when:
    - ansible_os_family == "RedHat" 
    - ansible_distribution_major_version|int >= 8

- name: Ensure ntp service is configured
  service:
    name: "{{ ntp_service }}"
    state: started
    enabled: yes

- name: Ensure GNU C Library is the latest
  package:
    name: "{{ gnu_c_lib }}"
    state: latest

- name: Ensure NUMA zone reclaim is disabled
  sysctl:
    name: vm.zone_reclaim_mode
    value: 0
    state: present
    reload: yes
  when: d.stat.exists == False

- name: Ensure thp-disable service exists
  copy:
    src: thp-disable.service
    dest: /etc/systemd/system/disable-transparent-huge-pages.service
    owner: root
    group: root
  register: thp

- name: Reload systemd
  systemd:
    daemon_reexec: yes
  when: thp.changed == True

- name: Enable disable-transparent-huge-pages service
  service:
    name: disable-transparent-huge-pages
    state: started
    enabled: yes
  when: d.stat.exists == False

- name: Set pam limits 1
  pam_limits:
    domain: "{{ item[0] }}"
    limit_type: "{{ item[1] }}"
    limit_item: "{{ item[2] }}"
    value: "{{ item[3] }}"
  with_nested:
    - ["root", "mongodb"]
    - ["hard", "soft"]
    - ["nproc", "nofile"]
    - [64000]

- name: Set pam limits 2
  pam_limits:
    domain: "{{ item[0] }}"
    limit_type: "{{ item[1] }}"
    limit_item: "{{ item[2] }}"
    value: "{{ item[3] }}"
  with_nested:
    - ["root", "mongodb"]
    - ["hard", "soft"]
    - ["memlock"]
    - [1024]

- name: Set sysctl values
  sysctl:
    name: "{{ item['name'] }}"
    value: "{{ item['value'] }}"
    state: present
  loop:
    - { "name": "vm.dirty_ratio", "value": "15" }
    - { "name": "vm.dirty_background_ratio", "value": "5" }
    - { "name": "net.core.somaxconn ", "value": "4096" }
    - { "name": "net.ipv4.tcp_fin_timeout", "value": "30" }
    - { "name": "net.ipv4.tcp_keepalive_intvl", "value": "30" }
    - { "name": "net.ipv4.tcp_keepalive_time", "value": "120" }
    - { "name": "net.ipv4.tcp_max_syn_backlog ", "value": "4096" }
